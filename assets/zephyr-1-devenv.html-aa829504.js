import{_ as i,r as l,o as d,c as r,a as e,b as n,d as s,e as t}from"./app-82f9bae4.js";const o={},c=e("h1",{id:"zephyr-1-development-environment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#zephyr-1-development-environment","aria-hidden":"true"},"#"),n(" Zephyr - 1 Development Environment")],-1),p=e("h2",{id:"zephyr-toolchain-and-dependencies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#zephyr-toolchain-and-dependencies","aria-hidden":"true"},"#"),n(" Zephyr Toolchain and Dependencies")],-1),u={href:"https://docs.zephyrproject.org/latest/develop/toolchains/zephyr_sdk.html",target:"_blank",rel:"noopener noreferrer"},v=e("li",null,"Python",-1),h=e("li",null,"DTC",-1),m=e("li",null,"CMake",-1),b=t(`<h2 id="development-environment" tabindex="-1"><a class="header-anchor" href="#development-environment" aria-hidden="true">#</a> Development Environment</h2><p>Note</p><p>Create a workspace</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mkdir cactes-zephyr
cd cactes-zephyr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Python Virtual Environment</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code> python -m venv .venv
 source .venv/Scripts/activate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Install west</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pip install west
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Download zephyr</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git clone https://github.com/zephyrproject-rtos/zephyr.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Create west configuration file manually</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> .west
<span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&#39;EOF&#39;<span class="token bash punctuation"> <span class="token operator">&gt;</span> .west/config</span>
[manifest]
path = zephyr
file = west.yml
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now you have 3 folders under <code>cactes-zephyr</code> folder.</p><ul><li><code>.venv/</code></li><li><code>.west/</code></li><li><code>zephyr/</code></li></ul><p>Download other third party libraries (verdor HAL, high level lib etc.)</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>west update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After <code>west update</code>, you will have 3 more folders</p><ul><li><code>bootloader</code></li><li><code>modules</code></li><li><code>tools</code></li></ul><p>Install other dependencies</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pip install -r zephyr/scripts/requirements.txt

In case you need proxy
pip install -r zephyr/scripts/requirements.txt --proxy=http://127.0.0.1:1080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),g={href:"https://docs.zephyrproject.org/latest/develop/getting_started/index.html",target:"_blank",rel:"noopener noreferrer"},x=t(`<h2 id="compile" tabindex="-1"><a class="header-anchor" href="#compile" aria-hidden="true">#</a> Compile</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>west build -b cactes_blb200_nrf52840 -p always samples/lowpower/ -- -DCONFIG_APP_STANDBY=y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>west build -b cactes_blb200_nrf52840 -p always samples/lowpower/ -- -DCONFIG_APP_SYSTEMOFF=y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="flash" tabindex="-1"><a class="header-anchor" href="#flash" aria-hidden="true">#</a> Flash</h2><p>By default pyocd is selected.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>west flash --erase
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function _(y,f){const a=l("ExternalLinkIcon");return d(),r("div",null,[c,p,e("ol",null,[e("li",null,[n("Zephyr SDK (aka the cross compiler) "),e("ul",null,[e("li",null,[e("a",u,[n("Download zephyr SDK and put to your user home folder"),s(a)])])])]),v,h,m]),b,e("p",null,[n("Refer to "),e("a",g,[n("zephyr get started guide"),s(a)]),n(" for more information.")]),x])}const z=i(o,[["render",_],["__file","zephyr-1-devenv.html.vue"]]);export{z as default};
