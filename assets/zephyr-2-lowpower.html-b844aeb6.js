import{_ as p,r as t,o,c as e,a as n,b as s,d as c,e as i}from"./app-82f9bae4.js";const u={},l=i(`<h1 id="zephyr-2-nrf52840-low-power-mode-test" tabindex="-1"><a class="header-anchor" href="#zephyr-2-nrf52840-low-power-mode-test" aria-hidden="true">#</a> Zephyr - 2 NRF52840 Low Power Mode Test</h1><h2 id="hardware" tabindex="-1"><a class="header-anchor" href="#hardware" aria-hidden="true">#</a> Hardware</h2><h3 id="electrical-specification" tabindex="-1"><a class="header-anchor" href="#electrical-specification" aria-hidden="true">#</a> Electrical specification</h3><p><img src="https://img.cactes.com/20230811-123133-417.png" alt="image-20230811123132294"></p><h3 id="hardware-connection" tabindex="-1"><a class="header-anchor" href="#hardware-connection" aria-hidden="true">#</a> Hardware connection</h3><p><img src="https://img.cactes.com/20230811-172916-339.png" alt="image-20230811172915082"></p><p><img src="https://img.cactes.com/20230811-122950-991.png" alt="image-20230811122949817"></p><h2 id="signal-chip-module-all-gpios-are-floating" tabindex="-1"><a class="header-anchor" href="#signal-chip-module-all-gpios-are-floating" aria-hidden="true">#</a> Signal Chip Module (All GPIOs are floating)</h2><p>Condition:</p><ul><li><p>supply voltage: 3V</p></li><li><p>temperature: 25</p></li></ul><h3 id="system-off-mode-0-7ua" tabindex="-1"><a class="header-anchor" href="#system-off-mode-0-7ua" aria-hidden="true">#</a> System Off Mode: 0.7uA</h3><p>Typical: 0.4uA</p><p><img src="https://img.cactes.com/20230811-122819-518.png" alt="image-20230811122817189"></p><h3 id="system-on-mode-3-5ua-full-ram-with-rtc-wakeup" tabindex="-1"><a class="header-anchor" href="#system-on-mode-3-5ua-full-ram-with-rtc-wakeup" aria-hidden="true">#</a> System on Mode: 3.5uA (Full RAM with RTC wakeup)</h3><p>Typical: 3.16uA</p><p><img src="https://img.cactes.com/20230811-161205-725.png" alt="image-20230811161202996"></p><h2 id="nrf52840dk-nrf52840" tabindex="-1"><a class="header-anchor" href="#nrf52840dk-nrf52840" aria-hidden="true">#</a> NRF52840DK-NRF52840</h2><p>Cut</p><ul><li>SB16</li><li>SB10 - SB12</li><li>SB13 - SB15</li><li>SB40 (VDD_nRF)</li></ul><p>Remove</p><ul><li>R16 - R19</li><li>U5 - U8</li><li>SW9</li></ul><p>Fly wire</p><ul><li>Debug in pin4 -&gt; P26 pin4 (SWDCLK)</li><li>Debug in pin2 -&gt; P26 pin5 (SWDIO)</li></ul><h3 id="system-off-mode-0-82ua" tabindex="-1"><a class="header-anchor" href="#system-off-mode-0-82ua" aria-hidden="true">#</a> System-off Mode: 0.82uA</h3><p><img src="https://img.cactes.com/20230811-162253-274.png" alt="image-20230811162251698"></p><h3 id="system-on-idle-mode-3-86ua" tabindex="-1"><a class="header-anchor" href="#system-on-idle-mode-3-86ua" aria-hidden="true">#</a> System on idle Mode: 3.86uA</h3><p><img src="https://img.cactes.com/20230811-162453-142.png" alt="image-20230811162451545"></p><h2 id="cactes-blb200" tabindex="-1"><a class="header-anchor" href="#cactes-blb200" aria-hidden="true">#</a> Cactes BLB200</h2><h3 id="system-off-mode-with-lora-in-sleep-mode-1-15ua" tabindex="-1"><a class="header-anchor" href="#system-off-mode-with-lora-in-sleep-mode-1-15ua" aria-hidden="true">#</a> System Off Mode with LoRa in Sleep mode 1.15uA</h3><p><img src="https://img.cactes.com/20230811-171843-532.png" alt="image-20230811171841645"></p><h3 id="system-on-mode-with-lora-in-sleep-mode-3-71ua" tabindex="-1"><a class="header-anchor" href="#system-on-mode-with-lora-in-sleep-mode-3-71ua" aria-hidden="true">#</a> System on Mode with LoRa in sleep mode 3.71uA</h3><p><img src="https://img.cactes.com/20230811-172413-933.png" alt="image-20230811172412347"></p><h3 id="system-on-mode-with-lora-in-standby-mode-716ua" tabindex="-1"><a class="header-anchor" href="#system-on-mode-with-lora-in-standby-mode-716ua" aria-hidden="true">#</a> System On Mode with LoRa in standby mode (716uA)</h3><p><img src="https://img.cactes.com/20230811-164753-622.png" alt="image-20230811164751999"></p><h3 id="system-off-mode-with-lora-in-standby-mode-739ua" tabindex="-1"><a class="header-anchor" href="#system-off-mode-with-lora-in-standby-mode-739ua" aria-hidden="true">#</a> System Off Mode with LoRa in standby mode (739uA)</h3><p><img src="https://img.cactes.com/20230811-164557-566.png" alt="image-20230811164556041"></p><h2 id="source-code-for-blb200-module" tabindex="-1"><a class="header-anchor" href="#source-code-for-blb200-module" aria-hidden="true">#</a> Source Code for BLB200 module</h2><h3 id="prj-conf" tabindex="-1"><a class="header-anchor" href="#prj-conf" aria-hidden="true">#</a> prj.conf</h3><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># Power Control</span>
<span class="token key attr-name">CONFIG_PM_DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>
<span class="token key attr-name">CONFIG_POWEROFF</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>

<span class="token comment"># GPIO</span>
<span class="token key attr-name">CONFIG_GPIO</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>

<span class="token comment"># UART</span>
<span class="token key attr-name">CONFIG_SERIAL</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>
<span class="token key attr-name">CONFIG_CONSOLE</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>
<span class="token key attr-name">CONFIG_UART_CONSOLE</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>

<span class="token comment"># SPI</span>
<span class="token key attr-name">CONFIG_SPI</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>

<span class="token comment"># LoRa</span>
<span class="token key attr-name">CONFIG_LORA</span><span class="token punctuation">=</span><span class="token value attr-value">y</span>

<span class="token key attr-name">CONFIG_USE_SEGGER_RTT</span><span class="token punctuation">=</span><span class="token value attr-value">n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="main-c" tabindex="-1"><a class="header-anchor" href="#main-c" aria-hidden="true">#</a> main.c</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * Copyright (c) 2023 Cactes Technology
 *
 * SPDX-License-Identifier: Apache-2.0
 */</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/kernel.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/device.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/drivers/gpio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/init.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/pm/pm.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/pm/device.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/pm/policy.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/sys/poweroff.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;soc.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;hal/nrf_gpio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/dt-bindings/gpio/nordic-nrf-gpio.h&gt;</span></span>

<span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio0 <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio1 <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">gpio_disconnect</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio_dev<span class="token punctuation">,</span> <span class="token keyword">int</span> pin<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device not ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ret <span class="token operator">=</span> <span class="token function">gpio_pin_configure</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">,</span> pin<span class="token punctuation">,</span> GPIO_DISCONNECTED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;set gpio ok %d\\n&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">gpio_low</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio_dev<span class="token punctuation">,</span> <span class="token keyword">int</span> pin<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device not ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ret <span class="token operator">=</span> <span class="token function">gpio_pin_configure</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">,</span> pin<span class="token punctuation">,</span> GPIO_OUTPUT_LOW<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;set gpio ok %d\\n&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">gpio_high</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio_dev<span class="token punctuation">,</span> <span class="token keyword">int</span> pin<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device not ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device ready.\\n&quot;</span><span class="token punctuation">,</span> gpio_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ret <span class="token operator">=</span> <span class="token function">gpio_pin_configure</span><span class="token punctuation">(</span>gpio_dev<span class="token punctuation">,</span> pin<span class="token punctuation">,</span> GPIO_OUTPUT_HIGH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ret<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;set gpio ok %d\\n&quot;</span><span class="token punctuation">,</span> ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">gpios_map</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>gpio<span class="token punctuation">;</span>
    <span class="token keyword">int</span> pin<span class="token punctuation">;</span>
    <span class="token keyword">int</span> action<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">/* -2 skip, -1 disconnect, 0 low, 1 high */</span>
<span class="token keyword">struct</span> <span class="token class-name">gpios_map</span> gpio_map_disconnect <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_APP_SYSTEMOFF</span></span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">else</span></span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">.</span>gpio <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_NODELABEL</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>pin <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">deinit</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> i<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">ARRAY_SIZE</span><span class="token punctuation">(</span>gpio_map_disconnect<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span>
            <span class="token function">gpio_disconnect</span><span class="token punctuation">(</span>gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>gpio<span class="token punctuation">,</span> gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>pin<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
            <span class="token function">gpio_low</span><span class="token punctuation">(</span>gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>gpio<span class="token punctuation">,</span> gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>pin<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
            <span class="token function">gpio_high</span><span class="token punctuation">(</span>gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>gpio<span class="token punctuation">,</span> gpio_map_disconnect<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>pin<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">DT_NODE_HAS_STATUS</span><span class="token punctuation">(</span><span class="token function">DT_ALIAS</span><span class="token punctuation">(</span>lora0<span class="token punctuation">)</span><span class="token punctuation">,</span> okay<span class="token punctuation">)</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;zephyr/drivers/lora.h&gt;</span></span>
<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span><span class="token keyword">const</span> lora_dev <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_ALIAS</span><span class="token punctuation">(</span>lora0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span><span class="token keyword">const</span> lora_spi <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_PARENT</span><span class="token punctuation">(</span><span class="token function">DT_ALIAS</span><span class="token punctuation">(</span>lora0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_SERIAL</span></span>
<span class="token keyword">static</span> <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span><span class="token keyword">const</span> cons <span class="token operator">=</span> <span class="token function">DEVICE_DT_GET</span><span class="token punctuation">(</span><span class="token function">DT_CHOSEN</span><span class="token punctuation">(</span>zephyr_console<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BUSY_WAIT_S</span> <span class="token expression"><span class="token number">2U</span></span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">SLEEP_S</span> <span class="token expression"><span class="token number">2U</span></span></span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> rc<span class="token punctuation">;</span>

    <span class="token comment">/* lora init and set to sleep */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">DT_NODE_HAS_STATUS</span><span class="token punctuation">(</span><span class="token function">DT_ALIAS</span><span class="token punctuation">(</span>lora0<span class="token punctuation">)</span><span class="token punctuation">,</span> okay<span class="token punctuation">)</span></span></span>
    <span class="token keyword">struct</span> <span class="token class-name">lora_modem_config</span> config<span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>lora_dev<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s Device not ready\\n&quot;</span><span class="token punctuation">,</span> lora_dev<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    config<span class="token punctuation">.</span>frequency <span class="token operator">=</span> <span class="token number">865100000</span><span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>bandwidth <span class="token operator">=</span> BW_125_KHZ<span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>datarate <span class="token operator">=</span> SF_10<span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>preamble_len <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>coding_rate <span class="token operator">=</span> CR_4_5<span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>iq_inverted <span class="token operator">=</span> false<span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>public_network <span class="token operator">=</span> false<span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>tx_power <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
	config<span class="token punctuation">.</span>tx <span class="token operator">=</span> true<span class="token punctuation">;</span>

	rc <span class="token operator">=</span> <span class="token function">lora_config</span><span class="token punctuation">(</span>lora_dev<span class="token punctuation">,</span> <span class="token operator">&amp;</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;LoRa config failed\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    rc <span class="token operator">=</span> <span class="token function">pm_device_action_run</span><span class="token punctuation">(</span>lora_spi<span class="token punctuation">,</span> PM_DEVICE_ACTION_SUSPEND<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>gpio0<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device not ready.\\n&quot;</span><span class="token punctuation">,</span> gpio0<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">device_is_ready</span><span class="token punctuation">(</span>gpio1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">printk</span><span class="token punctuation">(</span><span class="token string">&quot;%s: device not ready.\\n&quot;</span><span class="token punctuation">,</span> gpio1<span class="token operator">-&gt;</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/* uart deinit */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_SERIAL</span></span>
    rc <span class="token operator">=</span> <span class="token function">pm_device_action_run</span><span class="token punctuation">(</span>cons<span class="token punctuation">,</span> PM_DEVICE_ACTION_SUSPEND<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>

    <span class="token comment">/* gpio deinit */</span>
    <span class="token function">deinit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>true<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">/* simulate system is busy */</span>
        <span class="token function">k_busy_wait</span><span class="token punctuation">(</span>BUSY_WAIT_S <span class="token operator">*</span> USEC_PER_SEC<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/* enter sleep mode */</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifdef</span> <span class="token expression">CONFIG_APP_STANDBY</span></span>
        <span class="token function">k_sleep</span><span class="token punctuation">(</span><span class="token function">K_SECONDS</span><span class="token punctuation">(</span>SLEEP_S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression">defined CONFIG_APP_SYSTEMOFF</span></span>
        <span class="token function">sys_poweroff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">k_sleep</span><span class="token punctuation">(</span><span class="token function">K_SECONDS</span><span class="token punctuation">(</span>SLEEP_S<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>auto deinit serial and spi</li><li>auto deinit non-lora connected gpios</li></ul><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2>`,43),k=n("li",null,"A user confirmed about ~4uA idle sleep mode",-1),r=n("li",null,"https://devzone.nordicsemi.com/f/nordic-q-a/102588/nrf52840-zephyr-blinky-sleep-power-consumption",-1),d={href:"https://devzone.nordicsemi.com/cfs-file/__key/communityserver-discussions-components-files/4/7587.ble_5F00_app_5F00_pwr_5F00_profiling_5F00_pca10056_5F00_s140.hex",target:"_blank",rel:"noopener noreferrer"},v=n("li",null,"https://devzone.nordicsemi.com/f/nordic-q-a/66062/achieving-3-16-a-system-on-sleep-in-zephyr/272756",-1),m=n("li",null,[s("Worth to read, "),n("ul",null,[n("li",null,"https://devzone.nordicsemi.com/f/nordic-q-a/53117/high-current-consumption-4ua-even-without-peripherals-enabled-in-idle/214583")])],-1);function b(_,E){const a=t("ExternalLinkIcon");return o(),e("div",null,[l,n("ul",null,[k,r,n("li",null,[s("Can only achieve 0.7uA with another one's firmware "),n("ul",null,[n("li",null,[n("a",d,[s("7587.ble_app_pwr_profiling_pca10056_s140.hex"),c(a)])]),v])]),m])])}const g=p(u,[["render",b],["__file","zephyr-2-lowpower.html.vue"]]);export{g as default};
